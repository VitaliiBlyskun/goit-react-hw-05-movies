{"version":3,"file":"static/js/99.7b6c14b2.chunk.js","mappings":"gRAEaA,EAAOC,EAAAA,GAAAA,GAAH,8CAIJC,EAAOD,EAAAA,GAAAA,GAAH,mEAKJE,EAASF,EAAAA,GAAAA,EAAH,+GAONG,EAASH,EAAAA,GAAAA,EAAH,4CAINI,EAAUJ,EAAAA,GAAAA,EAAH,yF,SCqCpB,EArDgB,WACd,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,UAAS,MAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA4BN,EAAAA,EAAAA,UAAS,MAArC,eAAOO,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACRP,GAAa,GACb,IAAMQ,EAAW,mCAAG,gHAEQC,EAAAA,EAAAA,IAAaJ,GAFrB,gBAETK,EAFS,EAETA,QACPZ,EAAUY,GACVN,GAAU,GAJM,gDAMhBF,EAAS,KAAMS,SACfP,GAAU,GAPM,yBAShBJ,GAAa,GATG,4EAAH,qDAYjBQ,GACD,GAAE,CAACH,KAIF,gCACGN,GAAa,eACF,IAAXI,IAAoB,yBAAIF,EAAJ,kDACrB,SAACX,EAAD,WACc,IAAXa,GACCN,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,UAACvB,EAAD,YACE,UAACC,EAAD,sBAAiBqB,MACjB,SAACpB,EAAD,UAASqB,MAFAF,EADF,MAOI,IAAlBhB,EAAOmB,SACN,SAACrB,EAAD,wDAIP,C,+LChDYsB,EAAU,mCACVC,EAAW,gCAMXC,EAAa,mCAAG,sGACJC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oCACkBD,IAFd,uBACnBI,EADmB,EACnBA,KADmB,kBAKlBA,EAAKX,SALa,2CAAH,qDAYbY,EAAY,mCAAG,WAAOC,GAAP,yFACHH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,4DACyEM,IAFtE,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAUZG,EAAa,mCAAG,WAAMX,GAAN,yFACJO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDL,EADC,oBACaI,EADb,oBADI,uBACnBI,EADmB,EACnBA,KADmB,kBAKpBA,GALoB,2CAAH,sDAabI,EAAW,mCAAG,WAAMZ,GAAN,yFACFO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDL,EADC,4BACqBI,EADrB,oBADE,uBACjBI,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAYXZ,EAAY,mCAAG,WAAMI,GAAN,yFACHO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDL,EADC,4BACqBI,EADrB,2BADG,uBAClBI,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,qD","sources":["components/Review/Review.styled.js","components/Review/Review.jsx","components/services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-left: 25px;\n`;\n\nexport const Item = styled.li`\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n\nexport const Author = styled.p`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nexport const Review = styled.p`\n  font-size: 14px;\n`;\n\nexport const Nothing = styled.p`\n  margin-top: 15px;\n  margin-bottom: 10px;\n  font-size: 14px;\n`;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { movieReviews } from 'components/services/api';\nimport { List, Item, Author, Review, Nothing } from './Review.styled';\n\nconst Reviews = () => {\n  const [review, setReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(null);\n  const [error, setError] = useState(null);\n  const [result, setResult] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchReview = async () => {\n      try {\n        const {results} = await movieReviews(movieId);\n        setReview(results);\n        setResult(true);\n      } catch (error) {\n        setError(error.message);\n        setResult(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReview();\n  }, [movieId]);\n\n\n  return (\n    <>\n      {isLoading && 'Waiting for'}\n      {result === false && <p>{error}. We don't have any reviews for this movies</p>}\n      <List>\n        {result === true &&\n          review.map(({ id, author, content }) => (\n            <Item key={id}>\n              <Author>Author: {author}</Author>\n              <Review>{content}</Review>\n            </Item>\n          ))}\n      </List>\n      {review.length === 0 && (\n        <Nothing>We dont have any reviews for this movie</Nothing>\n      )}\n    </>\n  );\n};\n\nReviews.propTypes = {\n  review: PropTypes.array,\n  error: PropTypes.any,\n  isLoading: PropTypes.bool,\n  result: PropTypes.bool,\n};\n\nexport default Reviews ","import axios from 'axios';\n\nexport const API_KEY = '00bb2c85647763d13c7f7e27b824373c'; //ключ\nexport const BASE_URL = 'https://api.themoviedb.org/3/'; //базове юрл\n\n\n// 'https://api.themoviedb.org/3/trending/all/day?api_key=00bb2c85647763d13c7f7e27b824373c'\n\n// посилання на початковий рендер популярних фільмів\nexport const popularMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n\n    return data.results;\n};\n\n\n// https://api.themoviedb.org/3/search/movie?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US&page=1&include_adult=false&query=cat\n\n//посилання на пошук фільмів за назвою\nexport const moviesByName = async (query) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};\n\n// 'https://api.themoviedb.org/3/movie/20?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US'\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const movieFullInfo = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\n\n// 'https://api.themoviedb.org/3/movie/20/credits?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US'\n\n\n// запит інформації про акторський склад для сторінки кінофільму\nexport const movieActors = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\n\n\n// 'https://api.themoviedb.org/3/movie/100/reviews?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US&page=1'\n\n// запит оглядів для сторінки кінофільму\nexport const movieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\n"],"names":["List","styled","Item","Author","Review","Nothing","useState","review","setReview","isLoading","setIsLoading","error","setError","result","setResult","movieId","useParams","useEffect","fetchReview","movieReviews","results","message","map","id","author","content","length","API_KEY","BASE_URL","popularMovies","axios","data","moviesByName","query","movieFullInfo","movieActors"],"sourceRoot":""}