{"version":3,"file":"static/js/387.d604571c.chunk.js","mappings":"kRAEaA,EAAOC,EAAAA,GAAAA,GAAH,oEAKJC,EAAOD,EAAAA,GAAAA,GAAH,mEAKJE,EAAQF,EAAAA,GAAAA,IAAH,mFAMLG,EAAOH,EAAAA,GAAAA,EAAH,0FAMJI,EAAYJ,EAAAA,GAAAA,EAAH,2F,SCuCtB,EAzDa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA4BN,EAAAA,EAAAA,UAAS,MAArC,eAAOO,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACRP,GAAa,GAEb,IAAMQ,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAYJ,GAFrB,gBAENR,EAFM,EAENA,KACRC,EAAQD,GACRO,GAAU,GAJI,gDAMdF,EAAS,KAAMQ,SACfN,GAAU,GAPI,yBASdJ,GAAa,GATC,4EAAH,qDAafQ,GACD,GAAE,CAACH,KAGF,gCACGN,GAAa,eACF,IAAXI,IAAoB,wBAAKF,KAC1B,SAACX,EAAD,WACc,IAAXa,GACCN,EAAKc,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,GAAIC,EAA3B,EAA2BA,UAA3B,OACP,UAACvB,EAAD,WACoB,OAAjBqB,IACC,SAACpB,EAAD,CACEuB,IAAG,yCAAoCH,GACvCI,IAAKL,KAGT,SAAClB,EAAD,UAAOkB,KACP,UAACjB,EAAD,yBAAuBoB,OARdD,EADJ,QAelB,C,+LCpDYI,EAAU,mCACVC,EAAW,gCAMXC,EAAa,mCAAG,sGACJC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oCACkBD,IAFd,uBACnBI,EADmB,EACnBA,KADmB,kBAKlBA,EAAKC,SALa,2CAAH,qDAYbC,EAAY,mCAAG,WAAOC,GAAP,yFACHJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,4DACyEO,IAFtE,uBAClBH,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAUZI,EAAa,mCAAG,WAAMZ,GAAN,yFACJO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDL,EADC,oBACaI,EADb,oBADI,uBACnBI,EADmB,EACnBA,KADmB,kBAKpBA,GALoB,2CAAH,sDAabb,EAAW,mCAAG,WAAMK,GAAN,yFACFO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDL,EADC,4BACqBI,EADrB,oBADE,uBACjBI,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAYXK,EAAY,mCAAG,WAAMb,GAAN,yFACHO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDL,EADC,4BACqBI,EADrB,2BADG,uBAClBI,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 15px;\n  padding-left: 25px;\n`;\n\nexport const Item = styled.li`\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 10vw;\n  margin-bottom: 10px;\n`;\n\nexport const Name = styled.p`\n  font-size: 14px;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nexport const Character = styled.p`\n  font-size: 14px;\n  margin-bottom: 10px;\n  font-style: italic;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { movieActors } from '../services/api';\nimport { List, Item, Image, Name, Character } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [result, setResult] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchCast = async () => {\n      try {\n        const { cast } = await movieActors(movieId);\n        setCast(cast);\n        setResult(true);\n      } catch (error) {\n        setError(error.message);\n        setResult(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && 'Waiting for'}\n      {result === false && <h3>{error}</h3>}\n      <List>\n        {result === true &&\n          cast.map(({ name, profile_path, id, character }) => (\n            <Item key={id}>\n              {profile_path !== null && (\n                <Image\n                  src={`http://image.tmdb.org/t/p/w780/${profile_path}`}\n                  alt={name}\n                />\n              )}\n              <Name>{name}</Name>\n              <Character>Character: {character}</Character>\n            </Item>\n          ))}\n      </List>\n    </>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.array,\n  error: PropTypes.any,\n  isLoading: PropTypes.bool,\n  result: PropTypes.bool,\n};\n\nexport default Cast\n","import axios from 'axios';\n\nexport const API_KEY = '00bb2c85647763d13c7f7e27b824373c'; //ключ\nexport const BASE_URL = 'https://api.themoviedb.org/3/'; //базове юрл\n\n\n// 'https://api.themoviedb.org/3/trending/all/day?api_key=00bb2c85647763d13c7f7e27b824373c'\n\n// посилання на початковий рендер популярних фільмів\nexport const popularMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n\n    return data.results;\n};\n\n\n// https://api.themoviedb.org/3/search/movie?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US&page=1&include_adult=false&query=cat\n\n//посилання на пошук фільмів за назвою\nexport const moviesByName = async (query) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};\n\n// 'https://api.themoviedb.org/3/movie/20?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US'\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const movieFullInfo = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\n\n// 'https://api.themoviedb.org/3/movie/20/credits?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US'\n\n\n// запит інформації про акторський склад для сторінки кінофільму\nexport const movieActors = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\n\n\n// 'https://api.themoviedb.org/3/movie/100/reviews?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US&page=1'\n\n// запит оглядів для сторінки кінофільму\nexport const movieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\n"],"names":["List","styled","Item","Image","Name","Character","useState","cast","setCast","isLoading","setIsLoading","error","setError","result","setResult","movieId","useParams","useEffect","fetchCast","movieActors","message","map","name","profile_path","id","character","src","alt","API_KEY","BASE_URL","popularMovies","axios","data","results","moviesByName","query","movieFullInfo","movieReviews"],"sourceRoot":""}