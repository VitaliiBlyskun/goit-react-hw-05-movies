{"version":3,"file":"static/js/840.78e656e5.chunk.js","mappings":"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","sources":["components/services/api.js","pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = '00bb2c85647763d13c7f7e27b824373c'; //ключ\nexport const BASE_URL = 'https://api.themoviedb.org/3/'; //базове юрл\n\n\n// 'https://api.themoviedb.org/3/trending/all/day?api_key=00bb2c85647763d13c7f7e27b824373c'\n\n// посилання на початковий рендер популярних фільмів\nexport const popularMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n\n    return data.results;\n};\n\n\n// https://api.themoviedb.org/3/search/movie?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US&page=1&include_adult=false&query=cat\n\n//посилання на пошук фільмів за назвою\nexport const moviesByName = async (query) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};\n\n// 'https://api.themoviedb.org/3/movie/20?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US'\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const movieFullInfo = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\n\n// 'https://api.themoviedb.org/3/movie/20/credits?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US'\n\n\n// запит інформації про акторський склад для сторінки кінофільму\nexport const movieActors = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\n\n\n// 'https://api.themoviedb.org/3/movie/100/reviews?api_key=00bb2c85647763d13c7f7e27b824373c&language=en-US&page=1'\n\n// запит оглядів для сторінки кінофільму\nexport const movieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\n\nexport const Button = styled(Link)`\n  display: inline-block;\n  padding: 3px 10px;\n  margin-left: 3px;\n  margin-bottom: 2px;\n  border-radius: 2px;\n  border: 1px solid #ccc;\n  color: black;\n  font-size: 12px;\n  text-decoration: none;\n\n  &:hover,\n  :focus {\n    background-color:  orangered;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  padding-bottom: 5px;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const ImageHolder = styled.div`\n  padding: 2px;\n  width: 30vw;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n`;\n\nexport const InfoHolder = styled.div`\n  padding: 10px;\n  width: 70vw;\n`;\n\nexport const Title = styled.p`\n  margin-bottom: 15px;\n  margin-top: 15px;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const Score = styled.p`\n  margin-bottom: 15px;\n  font-size: 14px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 15px;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 15px;\n  font-size: 14px;\n`;\n\nexport const Genres = styled.p`\n  margin-bottom: 15px;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nexport const ListGenres = styled.ul`\n  display: flex;\n  list-style: none;\n`;\n\nexport const ItemGenre = styled.li`\n  margin-right: 5px;\n  font-size: 14px;\n`;\n\nexport const AddInfo = styled.p`\n  margin-bottom: 15px;\n  margin-left: 5px;\n  font-size: 14px;\n`;\n\nexport const List = styled.ul`\n  border-bottom: 1px solid #ccc;\n  padding-bottom: 15px;\n`;\n\nexport const Item = styled.li`\n  margin-left: 25px;\n  font-size: 14px;\n  margin-bottom: 5px;\n`;","import { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { movieFullInfo } from '../../src/components/services/api';\nimport {\n  Button,\n  Image,\n  Container,\n  ImageHolder,\n  InfoHolder,\n  Title,\n  Score,\n  Overview,\n  Text,\n  Genres,\n  AddInfo,\n  List,\n  Item,\n  ListGenres,\n  ItemGenre,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(null);\n  const [error, setError] = useState(null);\n  const [result, setResult] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getMovies = async () => {\n      try {\n        const data = await movieFullInfo(movieId);\n\n        setMovie(data);\n        setResult(true);\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n        setResult(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && 'Waiting for'}\n      {result === false && <h3>{error}</h3>}\n      {result === true && (\n        <>\n          <Button to={backLinkHref.current}>return</Button>\n          <Container>\n            <ImageHolder>\n              <Image\n                src={`http://image.tmdb.org/t/p/w780/${movie.poster_path}`}\n                alt={movie.title}\n              />\n            </ImageHolder>\n            <InfoHolder>\n              <Title>{movie.title || \"-\"}</Title>\n              <Score>User Score: {movie.vote_average}</Score>\n              <Overview>Overview:</Overview>\n              <Text>{movie.overview || \"-\"}</Text>\n              <Genres>Genres:</Genres>\n              <ListGenres>\n                {movie.genres.map(({ id, name }) => (\n                  <ItemGenre key={id}>{name}</ItemGenre>\n                ))}\n              </ListGenres>\n            </InfoHolder>\n          </Container>\n          <AddInfo>Additional information</AddInfo>\n          <List>\n            <Item>\n              <Link to=\"cast\">Cast</Link>\n            </Item>\n            <Item>\n              <Link to=\"reviews\">Reviews</Link>\n            </Item>\n          </List>\n        </>\n      )}\n      <Suspense fallback={<p>Loading ...</p>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.array,\n  error: PropTypes.any,\n  isLoading: PropTypes.bool,\n  result: PropTypes.bool,\n};\n\nexport default MovieDetails"],"names":["API_KEY","BASE_URL","popularMovies","axios","data","results","moviesByName","query","movieFullInfo","id","movieActors","movieReviews","Button","styled","Link","Container","ImageHolder","Image","InfoHolder","Title","Score","Overview","Text","Genres","ListGenres","ItemGenre","AddInfo","List","Item","useState","movie","setMovie","isLoading","setIsLoading","error","setError","result","setResult","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMovies","message","to","current","src","poster_path","alt","title","vote_average","overview","genres","map","name","Suspense","fallback"],"sourceRoot":""}